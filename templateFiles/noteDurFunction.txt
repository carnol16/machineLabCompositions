//Written by Colton Arnold Fall 2025


fun void noteDur() {
    32 => int length;

    [0,0,0,0,1,2,1,2,] @=> int observations[];
    hmm.train(2, 3, observations);

    int results1[length];
    hmm.generate(length, results1);

    0.0 => float counter;

    for (0 => int i; counter < 16 && i < length; i++) {
        float dur;

        if (results1[i] == 0) { 0.5 => dur; }
        else if (results1[i] == 1) { 1.0 => dur; }
        else if (results1[i] == 2) { 2.0 => dur; }
        else { continue; }

        counter + dur => counter;
        durArray << dur;
        chout <= results1[i] <= " ";
    }

    chout <= IO.newline();

    if (counter > 16.0) {
        counter - 16.0 => float remainder;
        <<<"Over by:", remainder>>>;

        // Remove last duration
        durArray[durArray.size() - 1]=> float lastDur;
        counter - lastDur => counter;

        // Add back trimmed duration if remainder is less than the last duration
        if (lastDur - remainder > 0.0) {
            durArray << (lastDur - remainder);
            counter + (lastDur - remainder) => counter;
        }
    }
    
    <<<"Final duration sum:", counter>>>;
}